## The global bot nickname
bot {
    nick = DebugKoncat
    user = Koncat
    realname = Koncat
}

## Configure a server
server {

    address = localhost:6667

    ## A list of channels to join initially, separated by comma and enclosed
    ## in double quotes.
    channel = "#main, #main-2"

    ## The Bot will use CPRIVMSG and CNOTICE instead of PRIVMSG and NOTICE where
    ## possible, bypassing flood protection limits.
    use-cprivmsg-if-chanop = true

    ## Prefix of a command, avoid using "!", most server bots use that.
    command-prefix = ":"

    ## Whether to display some useful debug messages, normally you want to set
    ## this to false
    debug = true
    debug-channel = "#koncat-debug"

    ## Some servers want every user to put bots in a separate channel, use this
    ## option if this is the case. The difference between the "channel" configuration
    ## option and this is that user input is not accepted in the channels specified here.
    ## In fact, nothing coming from or going out of the channels specified here is even processed.
    #bot-channel = #bots

    ## If you want different nicks for different servers, a bot block inside the server block
    ## will override the global setting. Note that this is useful if you want to identify on a server!
    bot {
        nick = Koncat
        user = Koncat
        realname = Koncat
        ident = nickserv:prompt-cli
        #ident = nickserv:password:"password"
        #ident-override = "PRIVMSG Nickserv IDENTIFY $p"
    }


}

## Write multiple server directives like this if you want
## to connect to more than one server.
#server {
    ## Connect via SSL
    #address = ssl://localhost:6697
    #channel = ...
#}

security {
    ##  Specifies how the superadmin, that is, the one user
    ##  with the highest privileges on the bot is identified.
    ##  The default and recommended setting is verify-via-console
    ##  With this setting a password will be generated upon bot start
    ##  that can be supplied to the bot once connected in order to become
    ##  superadmin.
    ##  Steps required to do this are as follows:
    ##    1. Find the password in the Bot's stdout (usually first thing printed)
    ##    2. Once the Bot is connected, identify by calling :superadmin #set(<password here>)
    superadmin = password:abc123
    ## Alternatively
    # superadmin = password:"password123"         # followed by step 2 above
    # superadmin = current-user:"user@some.vhost" # potentially unsafe depending on ircd

    ## Note that this also enables root on every module the Bot is calling, so it's a SUPER BAD idea!
    allow-root = false

}

defaults {
   ## Maximum execution time a function from a module has (the Module can set it to some other
   ## value, or completely disable it if it runs for an unknown amount of time).
   ## Unit can be any of {s,sec,min,h,d}.
   max-exec-time = 60s 

   ## By default, anyone can execute a function, except if the function says so otherwise
   ## For the default modules, ANY can be considered safe, if you're experimenting with the Module API
   ## on a production server you might want to change this to another value.
   ## Values can be any of {ANY,Admin,Registered,Privileged}
   permission = ANY
}
